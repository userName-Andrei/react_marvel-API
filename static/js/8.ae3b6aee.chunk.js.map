{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","pages/ComicsPage.js"],"names":["ErrorMessage","style","display","width","height","margin","objectFit","src","error","alt","useMarvelService","useState","process","setProcess","request","useCallback","url","a","method","body","headers","fetch","response","json","data","ok","Error","status","clearError","useHTTP","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getCharacterName","name","getAllComics","_transformComic","getComic","char","description","thumbnail","comics","path","extension","homepage","urls","wiki","items","comic","title","pageCount","prices","language","textObjects","price","AppBanner","className","avengers","avengersLogo","setContent","Component","newItem","Spinner","ComicsList","setComics","newItemLoading","setNewItemLoading","setOffset","comicsEnded","setComicsEnded","useEffect","onRequestComics","onComicsLoaded","newComics","ended","length","initial","then","i","CSSTransition","timeout","classNames","tabIndex","to","TransitionGroup","component","drawComics","onClick","disabled","ComicsPage","Helmet","content"],"mappings":"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","file":"static/js/8.ae3b6aee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import error from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{display: 'block', width: '250px', height: '250px', margin: '0 auto', objectFit: 'contain'}} src={error} alt=\"Error 403\" />\r\n    );\r\n}\r\n\r\nexport default ErrorMessage;","import {useHTTP} from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n    const {request, clearError, process, setProcess} = useHTTP();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public';\r\n    const _apiKey = 'apikey=8826ffc58611993cdd7dc1c1dfc83c2a';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}/characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}/characters/${id}?${_apiKey}`);\r\n\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getCharacterName = async (name) => {\r\n        const res = await request(`${_apiBase}/characters?name=${name}&${_apiKey}`);\r\n\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getAllComics = async (offset) => {\r\n        const res = await request(`${_apiBase}/comics?issueNumber=10&limit=8&offset=${offset}&${_apiKey}`);\r\n\r\n        return res.data.results.map(_transformComic);\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}/comics/${id}?${_apiKey}`);\r\n\r\n        return _transformComic(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        const {id, name, description, thumbnail, comics} = char;\r\n\r\n        return {\r\n            id,\r\n            name: name,\r\n            description: description ? description : 'Description not found.',\r\n            thumbnail: thumbnail.path + '.' + thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: comics.items\r\n        };\r\n    }\r\n\r\n    const _transformComic = (comic) => {\r\n        const {id, title, description, thumbnail, pageCount, prices, urls} = comic;\r\n\r\n        return {\r\n            id,\r\n            title,\r\n            description: description ? description : 'Description not found.',\r\n            thumbnail: thumbnail.path + '.' + thumbnail.extension,\r\n            language: comic.textObjects.language || 'en-us',\r\n            pageCount,\r\n            url: urls[0].url,\r\n            price: prices[0].price ? `${prices[0].price}$` : `NOT AVAILABEL`\r\n        };\r\n    }\r\n\r\n    return {clearError, \r\n            process,\r\n            setProcess, \r\n            getAllCharacters, \r\n            getCharacter, \r\n            getCharacterName, \r\n            getAllComics, \r\n            getComic}\r\n}\r\n\r\nexport default useMarvelService;","import {useState, useCallback} from 'react';\r\n\r\nexport const useHTTP = () => {\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setProcess('loading');\r\n\r\n        try{\r\n            const response = await fetch(url, {method, body, headers});\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status ${response.status}`);\r\n            }\r\n\r\n            return data;\r\n\r\n        } catch(e) {\r\n            setProcess('error');\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => {\r\n        setProcess('loading');\r\n    }, []);\r\n\r\n    return {request, clearError, process, setProcess};\r\n}","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './comicsList.scss';\r\n\r\nconst setContent = (process, Component, newItem) => {\r\n\r\n    switch (process) {\r\n        case 'waiting':\r\n            return <Spinner/>;\r\n            break;\r\n        case 'loading':\r\n            return newItem ? <Component /> : <Spinner/>;\r\n            break;\r\n        case 'confirmed':\r\n            return <Component />;\r\n            break;\r\n        case 'error':\r\n            return <ErrorMessage/>;\r\n            break;\r\n        default:\r\n            throw new Error('Unexpected process state!');\r\n    }\r\n}\r\n\r\nconst ComicsList = () => {\r\n\r\n    const [comics, setComics] = useState([]),\r\n          [newItemLoading, setNewItemLoading] = useState(false),\r\n          [offset, setOffset] = useState(0),\r\n          [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n    const {getAllComics, process, setProcess} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequestComics(offset, true);\r\n    }, []);\r\n\r\n    const onComicsLoaded = (newComics) => {\r\n        let ended = false;\r\n\r\n        if(newComics.length < 8) {\r\n            ended = true;\r\n        }\r\n\r\n        setComics(comics => [...comics, ...newComics]);\r\n        setNewItemLoading(false);\r\n        setComicsEnded(ended);\r\n        setOffset(offset => offset + 8);\r\n    }\r\n\r\n    const onRequestComics = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n\r\n        getAllComics(offset)\r\n            .then(onComicsLoaded)\r\n            .then(() => setProcess('confirmed'));\r\n    }\r\n\r\n    const drawComics = (comics) => {\r\n        const items = comics.map(({id, title, thumbnail, price}, i) => {\r\n            return (\r\n                <CSSTransition \r\n                    key={i}\r\n                    timeout={1000}\r\n                    classNames=\"comics__item\">\r\n                    <li \r\n                        tabIndex='0'\r\n                        className=\"comics__item\">\r\n                        <Link to={`/comics/${id}`}>\r\n                            <img \r\n                                src={thumbnail}\r\n                                alt={title} \r\n                                className=\"comics__item-img\"/>\r\n                            <div className=\"comics__item-name\">{title}</div>\r\n                            <div className=\"comics__item-price\">{price}</div>\r\n                        </Link>\r\n                    </li>\r\n                </CSSTransition>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                <TransitionGroup component={null}>\r\n                    {items}\r\n                </TransitionGroup>\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {setContent(process, () => drawComics(comics), newItemLoading)}\r\n            <button onClick={() => onRequestComics(offset, false)}\r\n                    className=\"button button__main button__long\"\r\n                    disabled={process === 'loading' || comicsEnded}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\nimport AppBanner from \"../components/appBanner/AppBanner\";\r\nimport ComicsList from \"../components/comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Comics\"\r\n                    />\r\n                <title>Marvel comics</title>\r\n            </Helmet>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ComicsPage;"],"sourceRoot":""}